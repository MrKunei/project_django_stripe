version: '3.8'

volumes:
  postgres:

networks:
  local:

services:
  postgres:
    image: postgres:14.6-alpine
    restart: always
    env_file:
      - ./.env
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready -U ${DB_USER}
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - local

  migrations:
    build:
      context: .
    depends_on:
      postgres:
        condition: service_healthy
    command: python manage.py migrate
    networks:
      - local

  api:
    build:
      context: .
    restart: always
    volumes:
      - ./:/app
    env_file:
      - ./.env
    command: python manage.py runserver 0.0.0.0:8000
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully
    networks:
      - local
